var BlockDropGame=function(targetElement){this.lines=0,this.score=0,this.level=1,this.dropLength=0,this._intervalId=null,this._dropWaitId=null,this.piece=null,this.nextPiece=null,this.touchStartX=null,this.touchStartY=null,this.touchMoved=!1,this.touchBlocked=!1,this.hardDropped=!1,this.isPlaying=!1,this.baseSize=30,this.gameWrapper=null,this.infoWrapper=null,this.scoreElement=null,this.levelElement=null,this.linesElement=null,this.nextElement=null,this.startButton=null,this.aboutButton=null,this.scoresButton=null,this.pauseButton=null,this.resumeButton=null,this.quitButton=null,this.infoDialog=null,this.finishDialog=null,this.highScoresDialog=null,this.scoreName=null,this.dropSound=new Audio("audio/drop.wav"),this.rotateSound=new Audio("audio/rotate.wav"),this.menuSound=null,this.gameMusic=new Audio("audio/music.mp3"),this.gameMusic.loop=!0,this.musicToggleButton=null,this.soundToggleButton=null,this.numSavedScores=0,this.highScores=[],this.loadScores(),this.initialSetup(targetElement),this.setupEventListeners(),this.showDialog("start"),this.showDialog("about"),this.showDialog("scores")};BlockDropGame.prototype.initialSetup=function(targetElement){var wrapperElement,scoreWrapper,levelWrapper,linesWrapper,nextWrapper,initVal;targetElement=targetElement||document.getElementsByTagName("body")[0];var gameWidth=16.5,gameHeight=21,gameRatio=gameWidth/gameHeight;this.baseSize=window.innerWidth/window.innerHeight>gameRatio?Math.floor(window.innerHeight/gameHeight):Math.floor(window.innerWidth/gameWidth),document.getElementsByTagName("body")[0].style.fontSize=this.baseSize+"px",wrapperElement=document.createElement("div"),wrapperElement.setAttribute("id","game-wrapper"),wrapperElement.style.marginTop=Math.floor((window.innerHeight-this.baseSize*gameHeight)/2)+"px",targetElement.appendChild(wrapperElement),this.gameWrapper=document.createElement("div"),this.gameWrapper.setAttribute("id","game-board"),wrapperElement.appendChild(this.gameWrapper),this.infoWrapper=document.createElement("div"),this.infoWrapper.setAttribute("id","game-info"),wrapperElement.appendChild(this.infoWrapper),nextWrapper=document.createElement("div"),nextWrapper.setAttribute("id","game-next"),nextWrapper.innerHTML="<span class='title'>Next:</span>",this.nextElement=document.createElement("div"),this.nextElement.setAttribute("class","container"),nextWrapper.appendChild(this.nextElement),this.infoWrapper.appendChild(nextWrapper),scoreWrapper=document.createElement("div"),scoreWrapper.setAttribute("id","game-score"),scoreWrapper.innerHTML="<span class='title'>Score:</span> ",this.scoreElement=document.createElement("span"),this.scoreElement.setAttribute("class","value"),this.scoreElement.innerHTML="0",scoreWrapper.appendChild(this.scoreElement),this.infoWrapper.appendChild(scoreWrapper),levelWrapper=document.createElement("div"),levelWrapper.setAttribute("id","game-level"),levelWrapper.innerHTML="<span class='title'>Level:</span> ",this.levelElement=document.createElement("span"),this.levelElement.setAttribute("class","value"),this.levelElement.innerHTML="1",levelWrapper.appendChild(this.levelElement),this.infoWrapper.appendChild(levelWrapper),linesWrapper=document.createElement("div"),linesWrapper.setAttribute("id","game-lines"),linesWrapper.innerHTML="<span class='title'>Lines:</span> ",this.linesElement=document.createElement("span"),this.linesElement.setAttribute("class","value"),this.linesElement.innerHTML="0",linesWrapper.appendChild(this.linesElement),this.infoWrapper.appendChild(linesWrapper),this.musicToggleButton=document.createElement("div"),this.musicToggleButton.setAttribute("id","button-music"),this.musicToggleButton.setAttribute("class","button button-toggle"),initVal=localStorage.getItem("blockdrop.settings.music")||"true","true"===initVal&&this.gameMusic.play(),this.musicToggleButton.setAttribute("data-on",initVal),this.musicToggleButton.innerHTML="<i class='icon-music'></i>",this.infoWrapper.appendChild(this.musicToggleButton),this.soundToggleButton=document.createElement("div"),this.soundToggleButton.setAttribute("id","button-sound"),this.soundToggleButton.setAttribute("class","button button-toggle"),initVal=localStorage.getItem("blockdrop.settings.sound")||"true",this.soundToggleButton.setAttribute("data-on",initVal),this.soundToggleButton.innerHTML="<i class='icon-volume-up'></i>",this.infoWrapper.appendChild(this.soundToggleButton)},BlockDropGame.prototype.startGame=function(){this.piece=this.gameWrapper.appendChild(PieceFactory.create()),this.piece.style.top="-1em",this.piece.style.left=5-Math.round(this.piece.size/2)+"em",this.nextPiece=this.nextElement.appendChild(PieceFactory.create()),this.nextPiece.style.left=(4-this.nextPiece.size)/2+"em",this.nextPiece.style.top=(4-this.nextPiece.size)/2+"em",this.score=0,this.lines=0,this.level=1,this.drawElements(),this.touchStartX=null,this.touchStartY=null,this.touchMoved=!1,this.touchBlocked=!1,this.isPlaying=!0,this.hideDialog("start"),this.hideDialog("about"),this.hideDialog("scores"),this.showDialog("pause"),this._intervalId=setInterval(this.update.bind(this),1e3/this.level)},BlockDropGame.prototype.update=function(){if(this._dropWaitId=null,this.canMoveDown())this.piece.style.top=this.piece.offsetTop/this.baseSize+1+"em",this.dropLength=0;else{"true"!==this.soundToggleButton.getAttribute("data-on")||this.hardDropped||this.dropSound.play(),this.hardDropped=!1,clearInterval(this._intervalId),this.addCurrentPieceToBoard();var completeRows=this.findCompleteRows();this.incrementScore(completeRows.length);for(var i=completeRows.length;i>0;i--)this.clearCompleteRow(completeRows[i-1]),this.lines++,0===this.lines%10&&this.level++;this.piece=this.nextPiece.parentNode.removeChild(this.nextPiece),this.gameWrapper.appendChild(this.piece),this.piece.style.top="-1em",this.piece.style.left=5-Math.round(this.piece.size/2)+"em",this.nextPiece=this.nextElement.appendChild(PieceFactory.create()),this.nextPiece.style.left=(4-this.nextPiece.size)/2+"em",this.nextPiece.style.top=(4-this.nextPiece.size)/2+"em",this.isGameOver()?this.finishGame(!1):this._intervalId=setInterval(this.update.bind(this),1e3/this.level),this.drawElements()}},BlockDropGame.prototype.drawElements=function(){this.scoreElement.innerHTML=this.score,this.linesElement.innerHTML=this.lines,this.levelElement.innerHTML=this.level},BlockDropGame.prototype.canMoveDown=function(piece){piece=piece||this.piece;var offsets={top:this.baseSize,left:0};return this.isIntersecting(piece,"bottomWall",offsets)?!1:!0},BlockDropGame.prototype.canMoveLeft=function(piece){piece=piece||this.piece;var offsets={top:0,left:-this.baseSize};return this.isIntersecting(piece,"leftWall",offsets)?!1:!0},BlockDropGame.prototype.canMoveRight=function(piece){piece=piece||this.piece;var offsets={top:0,left:this.baseSize};return this.isIntersecting(piece,"rightWall",offsets)?!1:!0},BlockDropGame.prototype.canRotate=function(){var tempPiece=null,tempRotate=this.piece.rotate+90,testFail=null;if(tempRotate>=360&&(tempRotate=0),tempPiece=this.gameWrapper.appendChild(PieceFactory.create(this.piece.pieceIndex,tempRotate)),tempPiece.style.zIndex="-1",tempPiece.style.left=this.piece.offsetLeft/this.baseSize+"em",tempPiece.style.top=this.piece.offsetTop/this.baseSize+"em",testFail=this.isIntersecting(tempPiece,"all",{left:0,top:0})){var offset=1;return 4===this.piece.size&&("leftWall"===testFail&&90===this.piece.rotate||"rightWall"===testFail&&270===this.piece.rotate)&&(offset=2),"leftWall"===testFail&&this.canMoveRight(tempPiece,offset)?(this.piece.style.left=this.piece.offsetLeft/this.baseSize+offset+"em",this.gameWrapper.removeChild(tempPiece),!0):"rightWall"===testFail&&this.canMoveLeft(tempPiece,offset)?(this.piece.style.left=this.piece.offsetLeft/this.baseSize-offset+"em",this.gameWrapper.removeChild(tempPiece),!0):(this.gameWrapper.removeChild(tempPiece),!1)}return this.gameWrapper.removeChild(tempPiece),!0},BlockDropGame.prototype.isIntersecting=function(object,target,offsets){var objectBlocks=object.getElementsByClassName("piece-block");if("leftWall"===target||"all"===target)for(var i=0;i<objectBlocks.length;i++)if(object.offsetLeft+objectBlocks[i].offsetLeft+offsets.left<0)return"leftWall";if("rightWall"===target||"all"===target)for(var i=0;i<objectBlocks.length;i++)if(object.offsetLeft+objectBlocks[i].offsetLeft+objectBlocks[i].offsetWidth+offsets.left>10*this.baseSize)return"rightWall";if("bottomWall"===target||"all"===target)for(var i=0;i<objectBlocks.length;i++)if(object.offsetTop+objectBlocks[i].offsetTop+objectBlocks[i].offsetHeight+offsets.top>20*this.baseSize)return"bottomWall";return this.checkAllBlocks(object,offsets)?"otherBlocks":!1},BlockDropGame.prototype.checkAllBlocks=function(object,offsets){var i,j,allBlocks=this.gameWrapper.getElementsByClassName("piece-block"),objectBlocks=object.getElementsByClassName("piece-block");for(i=0;i<allBlocks.length;i++)if(allBlocks[i].parentNode!==object&&allBlocks[i].parentNode!==this.piece)for(j=0;j<objectBlocks.length;j++)if(this.isBoxIntersecting({offsetLeft:object.offsetLeft+objectBlocks[j].offsetLeft,offsetTop:object.offsetTop+objectBlocks[j].offsetTop,offsetWidth:objectBlocks[j].offsetWidth,offsetHeight:objectBlocks[j].offsetHeight},allBlocks[i],offsets))return!0;return!1},BlockDropGame.prototype.isBoxIntersecting=function(sourceObject,targetObject,sourceOffsets){return sourceObject.offsetTop+sourceObject.offsetHeight+sourceOffsets.top>targetObject.offsetTop&&sourceObject.offsetTop+sourceOffsets.top<targetObject.offsetTop+targetObject.offsetHeight&&sourceObject.offsetLeft+sourceObject.offsetWidth+sourceOffsets.left>targetObject.offsetLeft&&sourceObject.offsetLeft+sourceOffsets.left<targetObject.offsetLeft+targetObject.offsetWidth?!0:!1},BlockDropGame.prototype.findCompleteRows=function(){var i,j,k,completeRows=[],allBlocks=this.gameWrapper.getElementsByClassName("piece-block");for(i=19;i>=0;i--){for(j=0;10>j;j++){for(k=0;k<allBlocks.length&&(allBlocks[k].offsetTop!==i*this.baseSize||allBlocks[k].offsetLeft!==j*this.baseSize);k++);if(k===allBlocks.length)break}10===j&&completeRows.push(i)}return completeRows},BlockDropGame.prototype.clearCompleteRow=function(completeRow){var i,allBlocks=this.gameWrapper.getElementsByClassName("piece-block"),blocksToRemove=[];for(i=0;i<allBlocks.length;i++)allBlocks[i].offsetTop===completeRow*this.baseSize?blocksToRemove.push(allBlocks[i]):allBlocks[i].offsetTop<completeRow*this.baseSize&&(allBlocks[i].style.top=allBlocks[i].offsetTop/this.baseSize+1+"em");for(i=0;i<blocksToRemove.length;i++)blocksToRemove[i].parentNode.removeChild(blocksToRemove[i])},BlockDropGame.prototype.isGameOver=function(){var offsets={top:0,left:0};return this.isIntersecting(this.piece,"bottomWall",offsets)?!0:!1},BlockDropGame.prototype.clearGameBoard=function(){for(var allBlocks=this.gameWrapper.getElementsByClassName("piece-block"),allBlocksLength=allBlocks.length,i=0;allBlocksLength>i;i++)allBlocks[0].parentNode!==this.piece&&this.gameWrapper.removeChild(allBlocks[0]);this.gameWrapper.removeChild(this.piece),this.nextElement.removeChild(this.nextPiece)},BlockDropGame.prototype.addCurrentPieceToBoard=function(){for(var i,newLeft,newTop,newBlock,pieceBlocks=this.piece.getElementsByClassName("piece-block"),pieceBlocksLength=pieceBlocks.length,i=0;pieceBlocksLength>i;i++)newLeft=this.piece.offsetLeft+pieceBlocks[0].offsetLeft,newTop=this.piece.offsetTop+pieceBlocks[0].offsetTop,newBlock=this.piece.removeChild(pieceBlocks[0]),newBlock.style.left=newLeft/this.baseSize+"em",newBlock.style.top=newTop/this.baseSize+"em",this.gameWrapper.appendChild(newBlock);this.gameWrapper.removeChild(this.piece)},BlockDropGame.prototype.incrementScore=function(numRows){switch(numRows){case 4:this.score+=1200*this.level;break;case 3:this.score+=300*this.level;break;case 2:this.score+=100*this.level;break;case 1:this.score+=40*this.level}this.score+=this.dropLength,this.dropLength=0},BlockDropGame.prototype.showDialog=function(dialog){var tempHTML;switch(dialog){case"start":this.startButton=document.createElement("div"),this.startButton.setAttribute("id","button-start"),this.startButton.setAttribute("class","button"),this.startButton.innerHTML="Start",this.gameWrapper.appendChild(this.startButton);break;case"about":this.aboutButton=document.createElement("div"),this.aboutButton.setAttribute("id","button-about"),this.aboutButton.setAttribute("class","button"),this.aboutButton.innerHTML="About",this.gameWrapper.appendChild(this.aboutButton);break;case"scores":this.scoresButton=document.createElement("div"),this.scoresButton.setAttribute("id","button-scores"),this.scoresButton.setAttribute("class","button"),this.scoresButton.innerHTML="High Scores",this.gameWrapper.appendChild(this.scoresButton);break;case"pause":this.pauseButton=document.createElement("div"),this.pauseButton.setAttribute("id","button-pause"),this.pauseButton.setAttribute("class","button"),this.pauseButton.innerHTML="Pause",this.infoWrapper.appendChild(this.pauseButton);break;case"resume":this.resumeButton=document.createElement("div"),this.resumeButton.setAttribute("id","button-resume"),this.resumeButton.setAttribute("class","button"),this.resumeButton.innerHTML="Resume",this.gameWrapper.appendChild(this.resumeButton);break;case"quit":this.quitButton=document.createElement("div"),this.quitButton.setAttribute("id","button-quit"),this.quitButton.setAttribute("class","button"),this.quitButton.innerHTML="Quit",this.gameWrapper.appendChild(this.quitButton);break;case"info":this.infoDialog=document.createElement("div"),this.infoDialog.setAttribute("id","dialog-info"),this.infoDialog.setAttribute("class","dialog"),tempHTML="<p>About BlockDrop</p>",tempHTML+="<div class='close-button'>x</div>",tempHTML+="<div class='inner-content'>",tempHTML+="<p>BlockDrop is a shameless Tetris&reg; clone using pure JavaScript, HTML and CSS. ",tempHTML+="I started writing it while teaching myself how to use JavaScript as a proper language and wean myself off jQuery. ",tempHTML+="I'm also using it as a testing platform for various JavaScript, HTML5 and CSS3 features. ",tempHTML+="I've tested in Chrome, Firefox, IE 9/10 and Chrome for Android so it should work on most modern platforms.</p>",tempHTML+="<p>Controls:<p>",tempHTML+="<p><span class='key'><i class='icon-caret-left'></i></span> <span class='key'>a</span> <span class='key'>h</span> or swipe <i class='icon-long-arrow-left'></i><br />moves the piece left</p>",tempHTML+="<p><span class='key'><i class='icon-caret-right'></i></span> <span class='key'>d</span> <span class='key'>l</span> or swipe <i class='icon-long-arrow-right'></i><br />moves the piece right</p>",tempHTML+="<p><span class='key'><i class='icon-caret-down'></i></span> <span class='key'>w</span> <span class='key'>k</span> swipe <i class='icon-long-arrow-up'></i>, or single tap<br />rotates the piece 90&deg; clock-wise</p>",tempHTML+="<p><span class='key'><i class='icon-caret-up'></i></span> <span class='key'>s</span> <span class='key'>j</span> or swipe <i class='icon-long-arrow-down'></i><br />soft drops the piece (drop line by line)</p>",tempHTML+="<p><span class='key key-long'>spacebar</span> or <span class='key key-long'>&crarr; enter</span><br />hard drops the piece (drop all the way to the bottom)</p>",tempHTML+="<p><br />GitHub: view the <a href='https://github.com/bkbooth/BlockDrop' target='_blank'>source code</a> or <a href='https://github.com/bkbooth' target='_blank'>find me</a></p>",tempHTML+="</div>",this.infoDialog.innerHTML=tempHTML,this.gameWrapper.parentNode.appendChild(this.infoDialog);break;case"finish":this.finishDialog=document.createElement("div"),this.finishDialog.setAttribute("id","dialog-finish"),this.finishDialog.setAttribute("class","dialog"),tempHTML="<p>Game Over!</p>",tempHTML+="<div class='close-button'>x</div>",tempHTML+="<div class='inner-content'>",tempHTML+="<p>Your score was:<br /><span class='score'>"+this.score+"</span></p>",tempHTML+="<p>Enter your name below to save the high score:</p>",tempHTML+="<input id='score_name' placeholder='Your name...' />",tempHTML+="</div>",this.finishDialog.innerHTML="<p>Game over!<br />Your score was: "+this.score+"</p>",this.finishDialog.innerHTML+="<div class='close-button'>x</div>",this.finishDialog.innerHTML=tempHTML,this.gameWrapper.appendChild(this.finishDialog),this.scoreName=document.getElementById("score_name"),this.scoreName.focus();break;case"scores-dialog":this.highScoresDialog=document.createElement("div"),this.highScoresDialog.setAttribute("id","dialog-scores"),this.highScoresDialog.setAttribute("class","dialog"),tempHTML="<p>Local High Scores</p>",tempHTML+="<div class='close-button'>x</div>",tempHTML+="<div class='inner-content'>",tempHTML+="<table><thead><tr><th>&nbsp</th><th>Score</th><th>Player</th></tr></thead><tbody>";for(var i=0;i<this.highScores.length;i++)tempHTML+="</tr><th>"+(i+1)+"</th>",tempHTML+="<td>"+this.highScores[i].score+"</td>",tempHTML+="<td>"+this.highScores[i].name+"</td></tr>";tempHTML+="</tbody></table></div>",this.highScoresDialog.innerHTML=tempHTML,this.gameWrapper.parentNode.appendChild(this.highScoresDialog)}},BlockDropGame.prototype.hideDialog=function(dialog){if("object"!=typeof dialog||dialog!==this.startButton&&dialog!==this.aboutButton&&dialog!==this.scoresButton&&dialog!==this.pauseButton&&dialog!==this.resumeButton&&dialog!==this.quitButton&&dialog!==this.infoDialog&&dialog!==this.finishDialog&&dialog!==this.highScoresDialog){if("string"==typeof dialog)switch(dialog){case"start":this.startButton.parentNode.removeChild(this.startButton),this.startButton=null;break;case"about":this.aboutButton.parentNode.removeChild(this.aboutButton),this.aboutButton=null;break;case"scores":this.scoresButton.parentNode.removeChild(this.scoresButton),this.scoresButton=null;break;case"pause":this.pauseButton.parentNode.removeChild(this.pauseButton),this.pauseButton=null;break;case"resume":this.resumeButton.parentNode.removeChild(this.resumeButton),this.resumeButton=null;break;case"quit":this.quitButton.parentNode.removeChild(this.quitButton),this.quitButton=null;break;case"info":this.infoDialog.parentNode.removeChild(this.infoDialog),this.infoDialog=null;break;case"finish":this.finishDialog.parentNode.removeChild(this.finishDialog),this.finishDialog=null,this.scoreName=null;break;case"scores-dialog":this.highScoresDialog.parentNode.removeChild(this.highScoresDialog),this.highScoresDialog=null}}else dialog.parentNode.removeChild(dialog)},BlockDropGame.prototype.pauseGame=function(){clearTimeout(this._intervalId),this.isPlaying=!1;for(var allBlocks=this.gameWrapper.getElementsByClassName("piece-block"),i=0;i<allBlocks.length;i++)allBlocks[i].style.display="none";this.nextPiece.style.display="none",this.hideDialog("pause"),this.showDialog("resume"),this.showDialog("quit")},BlockDropGame.prototype.resumeGame=function(){for(var allBlocks=this.gameWrapper.getElementsByClassName("piece-block"),i=0;i<allBlocks.length;i++)allBlocks[i].style.display="block";this.nextPiece.style.display="block",this.isPlaying=!0,this._intervalId=setInterval(this.update.bind(this),1e3/this.level),this.hideDialog("resume"),this.hideDialog("quit"),this.showDialog("pause")},BlockDropGame.prototype.finishGame=function(quit){this.isPlaying=!1,this.clearGameBoard(),quit?(this.hideDialog("resume"),this.hideDialog("quit"),this.showDialog("start"),this.showDialog("about"),this.showDialog("scores")):(this.hideDialog("pause"),this.showDialog("finish"))},BlockDropGame.prototype.loadScores=function(){this.numSavedScores=parseInt(localStorage.getItem("blockdrop.numscores"),10)||0;for(var i=0;i<this.numSavedScores;i++)this.highScores[i]={},this.highScores[i].name=localStorage.getItem("blockdrop.scores."+i+".name"),this.highScores[i].score=parseInt(localStorage.getItem("blockdrop.scores."+i+".score"),10)},BlockDropGame.prototype.saveScore=function(){this.highScores[this.numSavedScores]={},this.highScores[this.numSavedScores].name=this.scoreName.value,this.highScores[this.numSavedScores].score=this.score,this.highScores.sort(this.scoreCompare),this.numSavedScores++,this.numSavedScores>20&&(this.numSavedScores=20);for(var i=0;i<this.numSavedScores;i++)localStorage.setItem("blockdrop.scores."+i+".name",this.highScores[i].name),localStorage.setItem("blockdrop.scores."+i+".score",this.highScores[i].score);localStorage.setItem("blockdrop.numscores",this.numSavedScores)},BlockDropGame.prototype.moveLeftHandler=function(){this.canMoveLeft()&&(this.piece.style.left=this.piece.offsetLeft/this.baseSize-1+"em")},BlockDropGame.prototype.moveRightHandler=function(){this.canMoveRight()&&(this.piece.style.left=this.piece.offsetLeft/this.baseSize+1+"em")},BlockDropGame.prototype.moveDownHandler=function(){return clearInterval(this._intervalId),this.canMoveDown()?(this.piece.style.top=this.piece.offsetTop/this.baseSize+1+"em",this.dropLength++,this._intervalId=setInterval(this.update.bind(this),1e3/this.level),void 0):(null===this._dropWaitId&&(this._dropWaitId=setTimeout(this.update.bind(this),500/this.level)),void 0)},BlockDropGame.prototype.hardDropHandler=function(){for(;null===this._dropWaitId;)this.moveDownHandler();"true"===this.soundToggleButton.getAttribute("data-on")&&this.dropSound.play(),this.hardDropped=!0},BlockDropGame.prototype.rotateHandler=function(){if(this.canRotate()){this.piece.rotate+=90,this.piece.rotate>=360&&(this.piece.rotate=0),"true"===this.soundToggleButton.getAttribute("data-on")&&(this.rotateSound.pause(),this.rotateSound.currentTime=0,this.rotateSound.play());for(var blocks=this.piece.getElementsByClassName("piece-block"),i=0;i<blocks.length;i++)blocks[i].style.left=this.piece.blocksMap["rot"+this.piece.rotate][i].left+"em",blocks[i].style.top=this.piece.blocksMap["rot"+this.piece.rotate][i].top+"em"}},BlockDropGame.prototype.scoreCompare=function(a,b){return a.score<b.score?1:a.score>b.score?-1:0},BlockDropGame.prototype.setupEventListeners=function(){var that=this,newVal=null,wrapperElement=this.gameWrapper.parentNode;wrapperElement.addEventListener("click",function(event){event.target===that.startButton?(that.startGame(),event.preventDefault()):event.target===that.aboutButton?(that.hideDialog("start"),that.hideDialog("about"),that.hideDialog("scores"),that.showDialog("info"),event.preventDefault()):event.target===that.scoresButton?(that.hideDialog("start"),that.hideDialog("about"),that.hideDialog("scores"),that.showDialog("scores-dialog"),event.preventDefault()):event.target===that.pauseButton?(that.pauseGame(),event.preventDefault()):event.target===that.resumeButton?(that.resumeGame(),event.preventDefault()):event.target===that.quitButton?(that.finishGame(!0),event.preventDefault()):event.target===that.soundToggleButton||event.target.parentNode===that.soundToggleButton?(newVal="false"===that.soundToggleButton.getAttribute("data-on")?"true":"false",that.soundToggleButton.setAttribute("data-on",newVal),localStorage.setItem("blockdrop.settings.sound",newVal),event.preventDefault()):event.target===that.musicToggleButton||event.target.parentNode===that.musicToggleButton?("false"===that.musicToggleButton.getAttribute("data-on")?(newVal="true",that.gameMusic.play()):(newVal="false",that.gameMusic.pause(),that.gameMusic.currentTime=0),that.musicToggleButton.setAttribute("data-on",newVal),localStorage.setItem("blockdrop.settings.music",newVal),event.preventDefault()):that.infoDialog&&event.target===that.infoDialog.getElementsByClassName("close-button")[0]?(that.hideDialog("info"),that.showDialog("start"),that.showDialog("about"),that.showDialog("scores"),event.preventDefault()):that.finishDialog&&event.target===that.finishDialog.getElementsByClassName("close-button")[0]?(that.hideDialog("finish"),that.showDialog("start"),that.showDialog("about"),that.showDialog("scores"),event.preventDefault()):that.highScoresDialog&&event.target===that.highScoresDialog.getElementsByClassName("close-button")[0]&&(that.hideDialog("scores-dialog"),that.showDialog("start"),that.showDialog("about"),that.showDialog("scores"),event.preventDefault())}),window.addEventListener("keydown",function(event){var keyPressed=event.KeyCode||event.which;if(that.scoreName&&event.target===that.scoreName&&27!==event.keyCode)return 13===event.keyCode&&(that.saveScore(),that.hideDialog("finish"),that.showDialog("scores-dialog")),void 0;if(18===keyPressed){for(var buttons=that.gameWrapper.parentNode.getElementsByClassName("button"),i=0;i<buttons.length;i++)buttons[i]!==that.soundToggleButton&&buttons[i]!==that.musicToggleButton&&buttons[i].setAttribute("class","button hl-first");event.preventDefault()}if(that.isPlaying&&!that.hardDropped)switch(keyPressed){case 37:case 72:case 65:that.moveLeftHandler(),event.preventDefault();break;case 39:case 76:case 68:that.moveRightHandler(),event.preventDefault();break;case 38:case 75:case 87:that.rotateHandler(),event.preventDefault();break;case 40:case 74:case 83:that.moveDownHandler(),event.preventDefault();break;case 13:case 32:that.hardDropHandler(),event.preventDefault();break;case 27:case 80:that.pauseGame(),event.preventDefault()}else if(!that.isPlaying)switch(keyPressed){case 13:case 32:that.startButton?that.startGame():that.resumeButton&&that.resumeGame(),event.preventDefault();break;case 83:that.startButton&&that.startGame(),event.preventDefault();break;case 65:that.aboutButton?(that.hideDialog("start"),that.hideDialog("about"),that.hideDialog("scores"),that.showDialog("info")):that.infoDialog&&(that.hideDialog("info"),that.showDialog("start"),that.showDialog("about"),that.showDialog("scores")),event.preventDefault();break;case 72:that.scoresButton?(that.hideDialog("start"),that.hideDialog("about"),that.hideDialog("scores"),that.showDialog("scores-dialog")):that.highScoresDialog&&(that.hideDialog("scores-dialog"),that.showDialog("start"),that.showDialog("about"),that.showDialog("scores")),event.preventDefault();break;case 82:that.resumeButton&&that.resumeGame(),event.preventDefault();break;case 81:that.quitButton&&that.finishGame(!0),event.preventDefault();break;case 27:case 88:that.infoDialog?(that.hideDialog("info"),that.showDialog("start"),that.showDialog("about"),that.showDialog("scores")):that.finishDialog?(that.hideDialog("finish"),that.showDialog("start"),that.showDialog("about"),that.showDialog("scores")):that.highScoresDialog&&(that.hideDialog("scores-dialog"),that.showDialog("start"),that.showDialog("about"),that.showDialog("scores")),event.preventDefault()}}),window.addEventListener("keyup",function(event){var keyPressed=event.KeyCode||event.which;if(18===keyPressed){for(var buttons=that.gameWrapper.parentNode.getElementsByClassName("button"),i=0;i<buttons.length;i++)buttons[i]!==that.soundToggleButton&&buttons[i]!==that.musicToggleButton&&buttons[i].setAttribute("class","button");event.preventDefault()}}),wrapperElement.addEventListener("touchstart",function(event){that.isPlaying&&(that.touchStartX=event.changedTouches[0].clientX,that.touchStartY=event.changedTouches[0].clientY,that.touchMoved=!1,that.touchBlocked=!1)}),wrapperElement.addEventListener("touchend",function(event){that.isPlaying&&(that.touchMoved||event.target===that.pauseButton||(that.rotateHandler(),event.preventDefault()))}),wrapperElement.addEventListener("touchmove",function(event){if(that.isPlaying&&!that.touchBlocked){var touchEndX=event.changedTouches[0].clientX,touchEndY=event.changedTouches[0].clientY,touchMoveX=touchEndX-that.touchStartX,touchMoveY=touchEndY-that.touchStartY,touchBlockTime=null;Math.abs(touchMoveX)>Math.abs(touchMoveY)&&"y"!==that.touchMoved?(that.touchMoved="x",touchMoveX>0?that.moveRightHandler():that.moveLeftHandler(),touchBlockTime=40,event.preventDefault()):Math.abs(touchMoveX)<=Math.abs(touchMoveY)&&"x"!==that.touchMoved&&(touchMoveY>0?(that.touchMoved="y",that.moveDownHandler(),event.preventDefault()):that.touchMoved||that.rotateHandler(),touchBlockTime=5),that.touchBlocked=!0,setTimeout(function(){this.touchBlocked=!1}.bind(that),touchBlockTime)}})};var PieceFactory={pieces:[{id:"o",size:2,blocks:{rot0:[{left:0,top:0},{left:1,top:0},{left:0,top:1},{left:1,top:1}],rot90:[{left:0,top:0},{left:1,top:0},{left:0,top:1},{left:1,top:1}],rot180:[{left:0,top:0},{left:1,top:0},{left:0,top:1},{left:1,top:1}],rot270:[{left:0,top:0},{left:1,top:0},{left:0,top:1},{left:1,top:1}]}},{id:"l",size:3,blocks:{rot0:[{left:2,top:0},{left:0,top:1},{left:1,top:1},{left:2,top:1}],rot90:[{left:1,top:0},{left:1,top:1},{left:1,top:2},{left:2,top:2}],rot180:[{left:0,top:1},{left:1,top:1},{left:2,top:1},{left:0,top:2}],rot270:[{left:0,top:0},{left:1,top:0},{left:1,top:1},{left:1,top:2}]}},{id:"j",size:3,blocks:{rot0:[{left:0,top:0},{left:0,top:1},{left:1,top:1},{left:2,top:1}],rot90:[{left:1,top:0},{left:2,top:0},{left:1,top:1},{left:1,top:2}],rot180:[{left:0,top:1},{left:1,top:1},{left:2,top:1},{left:2,top:2}],rot270:[{left:1,top:0},{left:1,top:1},{left:0,top:2},{left:1,top:2}]}},{id:"s",size:3,blocks:{rot0:[{left:1,top:0},{left:2,top:0},{left:0,top:1},{left:1,top:1}],rot90:[{left:1,top:0},{left:1,top:1},{left:2,top:1},{left:2,top:2}],rot180:[{left:1,top:1},{left:2,top:1},{left:0,top:2},{left:1,top:2}],rot270:[{left:0,top:0},{left:0,top:1},{left:1,top:1},{left:1,top:2}]}},{id:"z",size:3,blocks:{rot0:[{left:0,top:0},{left:1,top:0},{left:1,top:1},{left:2,top:1}],rot90:[{left:2,top:0},{left:1,top:1},{left:2,top:1},{left:1,top:2}],rot180:[{left:0,top:1},{left:1,top:1},{left:1,top:2},{left:2,top:2}],rot270:[{left:1,top:0},{left:0,top:1},{left:1,top:1},{left:0,top:2}]}},{id:"t",size:3,blocks:{rot0:[{left:1,top:0},{left:0,top:1},{left:1,top:1},{left:2,top:1}],rot90:[{left:1,top:0},{left:1,top:1},{left:2,top:1},{left:1,top:2}],rot180:[{left:0,top:1},{left:1,top:1},{left:2,top:1},{left:1,top:2}],rot270:[{left:1,top:0},{left:0,top:1},{left:1,top:1},{left:1,top:2}]}},{id:"i",size:4,blocks:{rot0:[{left:0,top:1},{left:1,top:1},{left:2,top:1},{left:3,top:1}],rot90:[{left:2,top:0},{left:2,top:1},{left:2,top:2},{left:2,top:3}],rot180:[{left:0,top:2},{left:1,top:2},{left:2,top:2},{left:3,top:2}],rot270:[{left:1,top:0},{left:1,top:1},{left:1,top:2},{left:1,top:3}]}}],create:function(pieceIndex,initRotate){initRotate>=0&&360>initRotate&&0===initRotate%90||(initRotate=0),"number"==typeof pieceIndex&&pieceIndex>=0&&pieceIndex<=this.pieces.length||(pieceIndex=Math.floor(Math.random()*this.pieces.length));var pieceBlueprint=this.pieces[pieceIndex],newPiece=document.createElement("div");return newPiece.className="piece-wrapper",newPiece.blocksMap=pieceBlueprint.blocks,newPiece.rotate=initRotate,newPiece.size=pieceBlueprint.size,newPiece.pieceIndex=pieceIndex,newPiece.style.width=newPiece.size+"em",newPiece.style.height=newPiece.size+"em",newPiece.blocksMap["rot"+newPiece.rotate].forEach(function(offsets){var block=document.createElement("div");block.className="piece-block piece-"+pieceBlueprint.id,block.style.left=offsets.left+"em",block.style.top=offsets.top+"em",newPiece.appendChild(block)}),newPiece}};